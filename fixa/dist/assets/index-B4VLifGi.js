import"./modulepreload-polyfill-B5Qt9EMX.js";class u{constructor(e,t){this.declaredRoutes=e,this.fileBasedRoutes=t,this.basePath=window.location.origin,this.localStorageKey="Semantq.currentRoute"}normalizePath(e){return e.replace(/^\/|\/$/g,"")}cleanUrl(e){return e.replace(/build\/routes/g,"")}sanitizeHref(e){return e.replace(this.basePath,"").replace(/[\s<>'"\x00-\x1F\x7F]/g,"")}isCanonicalRoute(e){try{return new URL(e,this.basePath).origin!==this.basePath}catch{return!1}}isFileBasedRoute(e){const t=this.normalizePath(e);return Object.keys(this.fileBasedRoutes).some(s=>this.normalizePath(s)===t)}isDeclaredRoute(e){const t=this.normalizePath(e);return this.declaredRoutes.some(s=>this.normalizePath(s.path)===t)}async handleFileBasedRoute(e){const t=this.normalizePath(e),s=Object.entries(this.fileBasedRoutes).find(([o])=>this.normalizePath(o)===t);if(s){const[o,r]=s;console.log(`Navigating to file-based route: ${o} -> ${r}`);const a=r==="/"?this.basePath:`${this.basePath}/${r}`;console.log("Going to:",a),window.location.href=a}else console.error(`File-based route not found: ${e}`),this.handleRouteError(e)}interceptClicks(){document.addEventListener("click",e=>{const t=e.target.closest("a[href]");if(t&&!t.getAttribute("href").startsWith("#")){const s=t.getAttribute("href");if(this.isCanonicalRoute(s)){console.log(`Canonical route detected: ${s}. Letting the browser handle it.`);return}e.preventDefault();const o=this.sanitizeHref(s);if(this.isRouteBeingProcessed(o)){console.log(`Route ${o} is already being processed. Skipping.`);return}this.setCurrentRoute(o),this.isDeclaredRoute(o)?this.handleDeclaredRoute(o):this.isFileBasedRoute(o)?this.handleFileBasedRoute(o):this.handleRouteError(o)}})}}const i=new u(declaredRoutes,fileBasedRoutes);i.interceptClicks();window.addEventListener("load",()=>{const n=i.sanitizeHref(window.location.pathname);if(i.isRouteBeingProcessed(n)){console.log(`Route ${n} is already being processed. Skipping.`);return}i.setCurrentRoute(n),i.isDeclaredRoute(n)?i.handleDeclaredRoute(n):i.isFileBasedRoute(n)?i.handleFileBasedRoute(n):i.handleRouteError(n)});window.addEventListener("unload",()=>{i.clearCurrentRoute()});console.log(u);let l=0;const c=document.getElementById("counter");c.addEventListener("click",()=>{l++,c.textContent=l});
