import"../../../modulepreload-polyfill-B5Qt9EMX.js";class n{constructor(e,t){this.declaredRoutes=e,this.fileBasedRoutes=t,this.basePath=window.location.origin,this.localStorageKey="Semantq.currentRoute"}setCurrentRoute(e){localStorage.setItem(this.localStorageKey,e)}clearCurrentRoute(){localStorage.removeItem(this.localStorageKey)}isRouteBeingProcessed(e){return localStorage.getItem(this.localStorageKey)===e}normalizePath(e){return e.replace(/^\/|\/$/g,"")}sanitizeHref(e){return e.replace(this.basePath,"").replace(/[\s<>'"\x00-\x1F\x7F]/g,"")}isCanonicalRoute(e){try{return new URL(e,this.basePath).origin!==this.basePath}catch{return!1}}isFileBasedRoute(e){const t=this.normalizePath(e);return Object.keys(this.fileBasedRoutes).some(o=>this.normalizePath(o)===t)}isDeclaredRoute(e){const t=this.normalizePath(e);return this.declaredRoutes.some(o=>this.normalizePath(o.path)===t)}async handleFileBasedRoute(e){const t=this.normalizePath(e),o=Object.entries(this.fileBasedRoutes).find(([i])=>this.normalizePath(i)===t);if(o){const[i,r]=o,l=r==="/"?this.basePath:`${this.basePath}/${r}`;window.location.href=l}else this.handleRouteError(e)}async handleDeclaredRoute(e){const t=this.declaredRoutes.find(o=>o.path===e);if(t&&t.filePath){const o=t.filePath==="/"?this.basePath:`${this.basePath}/${t.filePath}`;window.location.href=o}else this.handleRouteError(e)}handleRouteError(e){console.error(`Route ${e} does not exist.`);const t=this.fileBasedRoutes["/404"];t&&(window.location.href=t)}interceptClicks(){document.addEventListener("click",e=>{const t=e.target.closest("a[href]");if(t&&!t.getAttribute("href").startsWith("#")){const o=t.getAttribute("href");if(this.isCanonicalRoute(o))return;e.preventDefault();const i=this.sanitizeHref(o);this.isRouteBeingProcessed(i)||(this.setCurrentRoute(i),this.isDeclaredRoute(i)?this.handleDeclaredRoute(i):this.isFileBasedRoute(i)?this.handleFileBasedRoute(i):this.handleRouteError(i))}})}}const a=new n(declaredRoutes,fileBasedRoutes);a.interceptClicks();window.addEventListener("load",()=>{const s=a.sanitizeHref(window.location.pathname);a.isRouteBeingProcessed(s)||(a.setCurrentRoute(s),a.isDeclaredRoute(s)?a.handleDeclaredRoute(s):a.isFileBasedRoute(s)&&a.handleFileBasedRoute(s))});window.addEventListener("unload",()=>{a.clearCurrentRoute()});async function c(){console.log(n)}async function h(){try{await new Promise(s=>{document.readyState==="loading"?document.addEventListener("DOMContentLoaded",s):s()}),console.log("DOM is ready"),await c()}catch(s){console.error("Error in main function:",s)}}h();
